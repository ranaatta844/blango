[{"model": "blog.comment", "pk": 2, "fields": {"creator": 1, "content": "i like myself!", "content_type": 4, "object_id": 1, "created_at": "2023-03-28T04:10:46.101Z", "modified_at": "2023-03-28T04:10:46.120Z"}}, {"model": "blog.comment", "pk": 3, "fields": {"creator": 1, "content": "It's a very informative course to get you ready for the programming world.", "content_type": 7, "object_id": 1, "created_at": "2023-03-30T05:51:20.563Z", "modified_at": "2023-03-30T05:51:20.563Z"}}, {"model": "blog.comment", "pk": 4, "fields": {"creator": 1, "content": "lets do this my friends.", "content_type": 7, "object_id": 2, "created_at": "2023-03-30T05:51:55.427Z", "modified_at": "2023-03-30T05:51:55.427Z"}}, {"model": "blog.comment", "pk": 5, "fields": {"creator": 1, "content": "oh really, i thought they are chickens.", "content_type": 7, "object_id": 5, "created_at": "2023-03-30T06:01:33.246Z", "modified_at": "2023-03-30T06:01:33.246Z"}}, {"model": "blog.comment", "pk": 6, "fields": {"creator": 1, "content": "hey hey it's working fine!", "content_type": 7, "object_id": 1, "created_at": "2023-03-31T06:24:48.214Z", "modified_at": "2023-03-31T06:24:48.214Z"}}, {"model": "blog.comment", "pk": 7, "fields": {"creator": 1, "content": "hello checking the logging of the comments", "content_type": 7, "object_id": 1, "created_at": "2023-04-05T09:29:40.259Z", "modified_at": "2023-04-05T09:29:40.259Z"}}, {"model": "blog.comment", "pk": 8, "fields": {"creator": 1, "content": "hello checking the teh logging again", "content_type": 7, "object_id": 1, "created_at": "2023-04-05T09:39:16.430Z", "modified_at": "2023-04-05T09:39:16.430Z"}}, {"model": "blog.tag", "pk": 1, "fields": {"value": "django"}}, {"model": "blog.tag", "pk": 2, "fields": {"value": "python,example"}}, {"model": "blog.tag", "pk": 3, "fields": {"value": "Profile"}}, {"model": "blog.tag", "pk": 4, "fields": {"value": "NEWS"}}, {"model": "blog.post", "pk": 1, "fields": {"author": 1, "created_at": "2023-03-27T04:53:48.850Z", "modified_at": "2023-03-29T08:45:08.952Z", "published_at": "2023-03-29T06:38:18Z", "title": "An example post", "slug": "an-example-post", "summary": "this a short demo of how the things work in admin panel of django", "content": "<p>This is an example post, that uses HTML to render itself. Lorem ipsum is a pseudo-Latin text used in web design, typography, layout, and printing in place of English to emphasise design elements over content. It's also called placeholder (or filler) text. It's a convenient tool for mock-ups. It helps to outline the visual elements of a document or presentation, eg typography, font, or layout. Lorem ipsum is mostly a part of a Latin text by the classical author and philosopher Cicero. Its words and letters have been changed by addition or removal, so to deliberately render its content nonsensical; it's not genuine, correct, or comprehensible Latin anymore. While lorem ipsum's still resembles classical Latin, it actually has no meaning whatsoever. As Cicero's text doesn't contain the letters K, W, or Z, alien to latin, these, and others are often inserted randomly to mimic the typographic appearence of European languages, as are digraphs not to be found in the original.</p>", "tags": [1, 2]}}, {"model": "blog.post", "pk": 2, "fields": {"author": 2, "created_at": "2023-03-29T06:43:30.896Z", "modified_at": "2023-03-29T08:45:32.892Z", "published_at": "2023-03-29T06:38:38Z", "title": "Advanced Django: A review", "slug": "advanced-django-a-review", "summary": "This is a good course to get your skills too good to match with the pros out in wild.", "content": "<p>This is a good course to get your skills too good to match with the pros out in wild. Lorem ipsum is a pseudo-Latin text used in web design, typography, layout, and printing in place of English to emphasise design elements over content. It's also called placeholder (or filler) text. It's a convenient tool for mock-ups. It helps to outline the visual elements of a document or presentation, eg typography, font, or layout. Lorem ipsum is mostly a part of a Latin text by the classical author and philosopher Cicero. Its words and letters have been changed by addition or removal, so to deliberately render its content nonsensical; it's not genuine, correct, or comprehensible Latin anymore. While lorem ipsum's still resembles classical Latin, it actually has no meaning whatsoever. As Cicero's text doesn't contain the letters K, W, or Z, alien to latin, these, and others are often inserted randomly to mimic the typographic appearence of European languages, as are digraphs not to be found in the original. </p>", "tags": [1, 2]}}, {"model": "blog.post", "pk": 3, "fields": {"author": 1, "created_at": "2023-03-30T04:16:12.861Z", "modified_at": "2023-03-30T04:16:12.861Z", "published_at": "2023-03-30T04:13:16Z", "title": "Leo: A Personal Profile", "slug": "leo-a-personal-profile", "summary": "Pertinax comprehensam in usu. Ad ferri altera recusabo mel, his ad vocent alterum percipit. Doctus legimus his an, cu vide dolor ocurreret pro, nec an ridens laoreet. Maiorum necessitatibus et per, vis ubique epicuri quaestio no. In inani legere vim.", "content": "<p>Pertinax comprehensam in usu. Ad ferri altera recusabo mel, his ad vocent alterum percipit. Doctus legimus his an, cu vide dolor ocurreret pro, nec an ridens laoreet. Maiorum necessitatibus et per, vis ubique epicuri quaestio no. In inani legere vim.\r\n\r\nSed vide dicit menandri te, ut pericula gloriatur ius. Nec no vivendo forensibus, cum fugit inermis neglegentur cu. His no putant tibique, partem integre dolores his et. Diam appetere suscipiantur his id, te idque iuvaret placerat eum. Ea duo omnium explicari necessitatibus, vim velit cotidieque ei. In pri stet lucilius reprimique, sint quas consetetur ius ut.\r\n\r\nDolores accommodare qui ei, fugit prodesset ei his, repudiare temporibus his et. Diceret accusam tacimates vix in, et eam quas posse. Duis everti veritus vix id, mei eu tation dolorem albucius. Enim ponderum maluisset pro ex, in vix meis periculis.\r\n\r\nVis suas habemus reprehendunt at, an numquam bonorum sea, debitis imperdiet vis an. Sea offendit dignissim no. Dico nibh contentiones vel id. Ridens suscipit et mei, ad soleat volutpat vix. Eam at erant sonet maiestatis. His ut laoreet lucilius torquatos, in his appareat signiferumque, at utinam blandit disputando vel.\r\n</p>", "tags": [3]}}, {"model": "blog.post", "pk": 4, "fields": {"author": 2, "created_at": "2023-03-30T04:18:42.289Z", "modified_at": "2023-03-30T04:18:42.289Z", "published_at": "2023-03-30T04:16:25Z", "title": "Django vs Python", "slug": "django-vs-python", "summary": "Django is a web framework written in Python that provides a structured and robust way to build web applications. Python, on the other hand, is a general-purpose programming language that can be used for various tasks, including web development. While Django is built on top of Python, it adds specific functionality and tools for web development, making it a popular choice for building complex web applications.", "content": "<p>Django is a powerful and popular web framework that allows developers to build web applications quickly and efficiently. It is built on top of Python, which provides a solid foundation for web development. Django's primary focus is on ease of use and rapid development, which makes it a great choice for projects that require a quick turnaround time.\r\n\r\nOne of the main benefits of using Django is its built-in functionality for handling common web development tasks such as URL routing, authentication, and database migrations. It also has a robust set of third-party libraries and packages that make it easy to extend and customize its functionality. Django's powerful Object-Relational Mapping (ORM) system makes it easy to work with databases, and its template system simplifies the process of creating dynamic web pages. With its strong emphasis on security, scalability, and flexibility, Django is a great choice for building web applications of any size and complexity.</p>", "tags": [1, 2]}}, {"model": "blog.post", "pk": 5, "fields": {"author": 1, "created_at": "2023-03-30T04:21:33.823Z", "modified_at": "2023-03-30T04:21:33.823Z", "published_at": "2023-03-30T04:19:12Z", "title": "Breaking News", "slug": "breaking-news", "summary": "\"Breaking News: Scientists discover a new species of dinosaur in Argentina. The newly identified species, called Llukalkan aliocranianus, had a unique skull structure and belonged to the abelisaurids family. The discovery sheds light on the diversity of dinosaurs in the southern hemisphere during the Late Cretaceous period.\"", "content": "<p>In a stunning new discovery, scientists in Argentina have identified a new species of dinosaur. Named Llukalkan aliocranianus, this dinosaur belonged to the abelisaurids family and had a unique skull structure that set it apart from other known species. The discovery was made in the Bajo de la Carpa Formation, a rock formation located in the Patagonian region of Argentina that dates back to the Late Cretaceous period.\r\n\r\nThe finding of this new species sheds light on the incredible diversity of dinosaurs that lived in the southern hemisphere during the Late Cretaceous period. The abelisaurids family, to which Llukalkan aliocranianus belonged, was a group of theropod dinosaurs that were dominant predators in the southern hemisphere during the Late Cretaceous. The discovery of this new species is a testament to the ongoing discoveries and advances being made in the field of paleontology, as scientists continue to uncover new information about the fascinating creatures that once roamed the Earth.</p>", "tags": [4]}}, {"model": "blog.post", "pk": 6, "fields": {"author": 2, "created_at": "2023-03-30T04:25:51.489Z", "modified_at": "2023-03-30T04:25:51.489Z", "published_at": "2023-03-30T04:24:12Z", "title": "Djnago: ConttenType", "slug": "djnago-conttentype", "summary": "In Django, a ContentType is a built-in model that allows you to store metadata about a model, such as its name, associated permissions, and the application it belongs to. It provides a way to retrieve model objects without explicitly importing the model class and can be used to associate content with any model in your project.", "content": "<p>In Django, ContentType is a useful tool for storing metadata about a model. It allows you to retrieve model objects without the need to import the model class, which can be especially useful when working with generic relationships. ContentType provides a simple and flexible way to associate content with any model in your project, and it's built-in to Django, so you don't need to install any additional packages to use it.\r\n\r\nContentType allows you to define permissions on your models and store them in the database, making it easy to control access to your data. You can use the ContentType model to get a list of all models in your project, along with their associated metadata. This can be useful when building dynamic views or templates that need to work with multiple models. By using the built-in ContentType model, you can save time and simplify your code, making your project more maintainable and scalable.</p>", "tags": [1]}}, {"model": "blango_auth.User", "pk": 1, "fields": {"password": "argon2$argon2id$v=19$m=102400,t=2,p=8$WkNsTjdPU1d5OW9lQmlXd1FsZ1R3Sg$wSIvJr5Q1tshmUUBz16AIg", "last_login": "2023-04-08T04:40:11.979Z", "is_superuser": true, "username": "attau", "first_name": "Muhammad", "last_name": "Atta ur Rehman", "email": "ithub844@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2023-03-27T04:09:20Z", "groups": [], "user_permissions": []}}, {"model": "blango_auth.User", "pk": 2, "fields": {"password": "pbkdf2_sha256$260000$lxHMinEn4FcY8BX0nGXjwF$UC8pNMu+5TZjD3Nrz1HyrrsmCQtk5fUz/TNl+Ig5+Ew=", "last_login": null, "is_superuser": false, "username": "ali", "first_name": "Ali", "last_name": "Khan", "email": "", "is_staff": false, "is_active": true, "date_joined": "2023-03-29T06:35:07Z", "groups": [], "user_permissions": []}}]